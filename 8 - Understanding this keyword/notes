4 ways that 'this' takes a value
- In normal function calls:
    function hello(){
      console.log(this);
    }
    -> In this case, this refer to 'window' object

- Within methods on objects:
  Case 1:
    var me = {
      name : 'thanh',
      age : 22,
      hello : function(){
        console.log(this);
      }
    };

    me.hello();
    -> 'this' in this case refer to 'me' object
  
  Case 2: 
    var me = {
      name : 'thanh', 
      age : 22
    };
    function hello(){
      console.log(this);
    }
    me.foo = hello;

    me.foo();
    // 'this' points to me
    hello();
    // 'this' points to 'window' object

- Within an object that has been constructed
var Person = function(name, age){
  this.name = name || 'someone',
  this.age = age || 0,
  this.hello = function(){
    console.log(this.name + ' | ' + this.age);
  }
}

var me = new Person();
me.hello();
// 'this' in this case refer to 'me' object

- A function invoked with .call, .apply, or .bind

